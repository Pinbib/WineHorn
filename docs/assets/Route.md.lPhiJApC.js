import{_ as t,c as s,a0 as a,o as i}from"./chunks/framework.-Srmup7u.js";const u=JSON.parse('{"title":"Route","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"Route.md","filePath":"Route.md"}'),o={name:"Route.md"};function d(l,e,c,h,n,p){return i(),s("div",null,e[0]||(e[0]=[a('<h1 id="route" tabindex="-1">Route <a class="header-anchor" href="#route" aria-label="Permalink to &quot;Route&quot;">â€‹</a></h1><p>This is the path class for the server.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Route </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;winehorn/Route&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(method: RequestTypes, path: string, handler: RequestHandler, validator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Schema) ;</span></span></code></pre></div><ul><li><code>method: RequestTypes</code> - specifies a request method that accepts a path (i.e.: <code>GET</code> | <code>POST</code> | <code>PUT</code> | <code>DELETE</code> | <code>PATCH</code> | <code>OPTIONS</code> | <code>HEAD</code> | <code>CONNECT</code> | <code>TRACE</code>)</li><li><code>path: string</code> - This is the path that will be listened to.</li><li><code>handler: RequestHandler</code> - callback that processes the request.</li><li><code>validator?: Schema</code> - an optional argument that accepts a <a href="/WineHorn/Validator.html">scheme</a> according to which <code>req.query</code> will be processed.</li></ul>',5)]))}const k=t(o,[["render",d]]);export{u as __pageData,k as default};
